from collections import deque
import sys
input = sys.stdin.readline

def dfs(v):
    A.append(v)
    vis[v] = True
    for i in adj[v]:
        if not vis[i]:
            dfs(i)

def bfs(v):
    q = deque([v])
    vis[v] = True
    while q:
        now = q.popleft()
        B.append(now)
        for i in adj[now]:
            if not vis[i]:
                q.append(i)
                vis[i] = True


N,M,V = map(int,input().split())
adj = [[] for _ in range(N+1)]

for _ in range(M):
    x,y = map(int,input().split())
    adj[x].append(y)
    adj[y].append(x)

for i in range(1,N+1):
    adj[i].sort()

# dfs 실행
A = []
vis = [False]*(N+1)
dfs(V)

# bfs 실행
B = []
vis = [False] * (N+1)
bfs(V)

print(' '.join(map(str,A)))
print(' '.join(map(str,B)))